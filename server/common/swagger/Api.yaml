openapi: 3.0.2
info:
  version: 1.0.0
  title: doer-backend
  description: API for todoist clone.
tags:
  - name: Task
    description: The swagger API specification
paths:
  /tasks:
    post:
      tags:
        - Task
      security:
        - Oauth2: []
      description: save task
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        description: The task to be saved
      responses:
        "200":
          description: Sucessfully posted task.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Task body was empty.
        "500":
          description: Error occured while posting data.
  /tasks/{id}:
    parameters:
      - in: path
        name: id
        description: id of task.
        required: true
        schema:
          type: string
    delete:
      security:
        - Oauth2: []
      tags:
        - Task
      description: Deletes task from data store.
      responses:
        "204":
          description: Task deleted.
    put:
      tags:
        - Task
      description: Update data store task.
      security:
        - Oauth2: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        description: The task to be saved
        required: true
      responses:
        "204":
          description: Task updated.
  /tasks/{email}:
    parameters:
      - in: path
        name: email
        description: Email of user whose tasks are to be retrieved.
        required: true
        schema:
          type: string
    get:
      tags:
        - Tasks
      security:
        - Oauth2: []
      responses:
        "200":
          description: OK
servers:
  - url: http://localhost:3000/api/v1
    description: Local development spec
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: This API uses OAuth2 with the authorizationCode grant flow. 
      flows: 
        implicit:
          authorizationUrl: https://dev-769052.okta.com/oauth2/default/v1/authorize
        authorizationCode:
          authorizationUrl: https://dev-769052.okta.com/oauth2/default/v1/authorize
          tokenUrl: https://dev-769052.okta.com/oauth2/default/v1/token
        password:
          tokenUrl: https://dev-769052.okta.com/oauth2/default/v1/token
  schemas:
    User:
      type: object
      title: user
      required:
        - firstName
        - lastName
        - handle
        - email
        - password
      properties:
        firstName:
          type: string
          example: Johnny
        lastName:
          type: string
          example: Test
        handle:
          type: string
          example: TopJohann28
        email:
          type: string
          example: someuser@example.com
        password:
          type: string
          example: testPassword (don't actually use this please)
    Login:
      type: object
      title: login
      required:
        - firstName
        - lastName
        - handle
        - email
        - token
      properties:
        firstName:
          type: string
          example: Johnny
        lastName:
          type: string
          example: Test
        handle:
          type: string
          example: TopJohann28
        email:
          type: string
          example: someuser@example.com
        token:
          type: string
          example: JWT token
          description: JWT token
    Task:
      type: object
      title: task
      required:
        - email
        - text
      properties:
        project:
          type: string
          example: Chores
        email:
          type: string
          example: sample.user@something.com
        text:
          type: string
          example: Do dishes.
